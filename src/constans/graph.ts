export const GRAPH_PREDEFINED_LABELS = {
  "Kanban Board": [
    "Начать задачу",
    "В процессе",
    "Код ревью",
    "Тестирование",
    "Завершить",
    "Переместить",
    "Следующий этап",
    "Готово",
  ],
  "Scrum Board": [
    "Начать спринт",
    "В разработке",
    "Тестирование",
    "Code Review",
    "Завершить",
    "Следующий спринт",
    "Готово к релизу",
    "Ретроспектива",
  ],
  "Git Flow": [
    "Создать ветку",
    "Коммит изменений",
    "Push в репозиторий",
    "Создать Pull Request",
    "Code Review",
    "Merge в main",
    "Создать релиз",
    "Deploy",
  ],
  "CI/CD Pipeline": [
    "Код коммит",
    "Автотесты",
    "Сборка",
    "Статический анализ",
    "Deploy в dev",
    "Интеграционные тесты",
    "Deploy в staging",
    "Deploy в production",
  ],
  "Testing Strategy": [
    "Unit тесты",
    "Integration тесты",
    "E2E тесты",
    "Performance тесты",
    "Security тесты",
    "Code Coverage",
    "Test Review",
    "Regression тесты",
  ],
  "Code Review Process": [
    "Создать PR",
    "Автоматические проверки",
    "Peer Review",
    "Исправить замечания",
    "Approve",
    "Merge",
    "Cleanup ветки",
    "Документировать",
  ],
  default: [
    "Связать",
    "Подключить",
    "Перейти к",
    "Следующий",
    "Результат",
    "Процесс",
    "Завершить",
    "Продолжить",
  ],
};

export const GRAPH_TOPICS_DATA = [
  {
    topic: "Kanban Board",
    description:
      "Методология управления рабочим процессом для визуализации задач и оптимизации потока работы",
    detailedDescription:
      "Kanban Board - это визуальная система управления задачами, которая помогает командам оптимизировать рабочий процесс. Основные принципы: визуализация работы, ограничение незавершенной работы, управление потоком. Позволяет выявить узкие места и поддерживать непрерывный поток работы.",
    workflow: [
      "To Do - Задачи для выполнения. Здесь находятся все новые задачи, которые ожидают начала работы. Это бэклог задач, из которого команда выбирает следующую работу.",
      "In Progress - Задачи в работе. Активная разработка ведется здесь. Разработчики берут задачи из To Do и перемещают их сюда, когда начинают работу.",
      "Code Review - Проверка кода. После завершения разработки код проходит проверку другими разработчиками. Это помогает находить ошибки и улучшать качество кода.",
      "Testing - Тестирование. QA-инженеры проверяют функциональность, находят баги и убеждаются, что все работает согласно требованиям.",
      "Done - Завершенные задачи. Полностью готовые задачи, протестированные и готовые к развертыванию в продакшн.",
    ],
    benefits: [
      "Визуализация рабочего процесса",
      "Выявление узких мест",
      "Улучшение потока работы",
      "Повышение прозрачности",
    ],
    hints: [
      "Создайте колонки для каждого этапа процесса",
      "Перетаскивайте задачи между колонками",
      "Ограничьте количество задач в каждой колонке",
      "Отслеживайте время выполнения задач",
    ],
  },
  {
    topic: "Scrum Board",
    description:
      "Агильная методология управления проектами с итеративным подходом и спринтами",
    detailedDescription:
      "Scrum Board - это инструмент для управления задачами в рамках спринтов по методологии Scrum. Включает планирование спринтов, ежедневные стендапы, ретроспективы. Помогает команде работать итеративно и адаптивно.",
    workflow: [
      "To Do - Бэклог спринта. Все задачи, запланированные для выполнения в текущем спринте. Команда выбирает задачи на planning meeting в начале спринта.",
      "In Progress - Задачи в разработке. Активная работа над функциональностью. Команда ежедневно синхронизируется на daily stand-up о прогрессе.",
      "Testing - Тестирование. QA команда проверяет реализованный функционал в рамках спринта. Важно завершить тестирование до конца спринта.",
      "Code Review - Проверка кода. Коллеги проверяют качество кода, соответствие стандартам команды и лучшим практикам разработки.",
      "Done - Завершенные задачи спринта. Полностью готовые задачи, которые будут продемонстрированы на sprint review и готовы к релизу.",
    ],
    benefits: [
      "Итеративная разработка",
      "Быстрая адаптация к изменениям",
      "Регулярная обратная связь",
      "Командная работа",
    ],
    hints: [
      "Планируйте спринты на 1-4 недели",
      "Проводите ежедневные стендапы",
      "Используйте ретроспективы для улучшений",
      "Ограничивайте объем работы в спринте",
    ],
  },
  {
    topic: "Git Flow",
    description:
      "Модель ветвления Git для управления разработкой с четкой структурой веток",
    detailedDescription:
      "Git Flow - это модель ветвления, которая определяет строгую структуру веток для управления разработкой. Включает main, develop, feature, release и hotfix ветки. Обеспечивает стабильность основного кода и организованную разработку новых функций.",
    workflow: [
      "main - Стабильная версия. Содержит только релизный продакшн-код. Каждый коммит в main - это новая версия в продакшн. Защищена от прямых коммитов.",
      "develop - Интеграционная ветка. Основная ветка разработки, где интегрируются все новые возможности. Отражает последнее состояние разработки для следующего релиза.",
      "feature/* - Новые функции. Создаются от develop для разработки новых возможностей. Каждая feature ветка - отдельная функциональность. После завершения вливается обратно в develop.",
      "release/* - Подготовка релиза. Создается от develop, когда готовы к релизу. Здесь делаются финальные исправления, обновляются версии. После готовности вливается в main и develop.",
      "hotfix/* - Критические исправления. Создаются от main для срочного исправления багов в продакшн. После исправления вливаются и в main, и в develop.",
    ],
    benefits: [
      "Стабильность основного кода",
      "Организованная разработка",
      "Параллельная работа команды",
      "Контроль качества",
    ],
    hints: [
      "Используйте main только для стабильных релизов",
      "Разрабатывайте новые функции в feature ветках",
      "Подготавливайте релизы в release ветках",
      "Исправляйте критические баги в hotfix ветках",
    ],
  },
  {
    topic: "CI/CD Pipeline",
    description:
      "Автоматизация процессов интеграции, тестирования и развертывания кода",
    detailedDescription:
      "CI/CD Pipeline - это набор практик и инструментов для автоматизации процессов интеграции кода, тестирования и развертывания. Обеспечивает быструю и надежную доставку изменений в продакшн с минимальным риском.",
    workflow: [
      "Source - Исходный код. Разработчики коммитят изменения в систему контроля версий (Git). Это триггерит автоматический запуск пайплайна.",
      "Build - Сборка приложения. Код компилируется, зависимости устанавливаются, создаются артефакты. Если сборка падает - процесс останавливается.",
      "Test - Автоматические тесты. Запускаются unit-тесты, интеграционные тесты, проверки качества кода. Только при успехе переходим дальше.",
      "Deploy to Dev - Развертывание в dev. Автоматическое развертывание в среду разработки для первичного тестирования и проверки интеграции.",
      "Deploy to Staging - Развертывание в staging. Полное тестирование в окружении, максимально близком к продакшн. Финальная проверка перед релизом.",
      "Deploy to Production - Развертывание в продакшн. Автоматический или ручной деплой в продакшн после всех проверок. Доступно пользователям.",
    ],
    benefits: [
      "Автоматизация процессов",
      "Быстрая обратная связь",
      "Снижение рисков",
      "Повышение качества",
    ],
    hints: [
      "Автоматизируйте все этапы сборки и тестирования",
      "Используйте разные окружения для тестирования",
      "Настройте уведомления о статусе сборки",
      "Внедряйте постепенно, начиная с простых задач",
    ],
  },
  {
    topic: "Testing Strategy",
    description:
      "Комплексная стратегия тестирования для обеспечения качества программного обеспечения",
    detailedDescription:
      "Testing Strategy - это комплексный подход к тестированию, включающий различные уровни и типы тестов. Обеспечивает покрытие всех аспектов приложения и гарантирует качество кода на всех этапах разработки.",
    workflow: [
      "Unit Tests - Модульные тесты. Тестируют отдельные функции и компоненты в изоляции. Быстрые, простые, должны быть много. Основа пирамиды тестирования.",
      "Integration Tests - Интеграционные тесты. Проверяют взаимодействие между компонентами, модулями и внешними системами. Убеждаются, что части системы работают вместе.",
      "E2E Tests - End-to-End тесты. Тестируют полные пользовательские сценарии от начала до конца. Имитируют реальное поведение пользователей в браузере.",
      "Performance Tests - Тесты производительности. Проверяют скорость работы, нагрузочную способность, время отклика. Выявляют узкие места и проблемы масштабирования.",
      "Security Tests - Тесты безопасности. Проверяют уязвимости, защиту данных, аутентификацию. Находят потенциальные риски безопасности до продакшн.",
    ],
    benefits: [
      "Высокое качество кода",
      "Раннее выявление ошибок",
      "Уверенность в изменениях",
      "Документация поведения",
    ],
    hints: [
      "Начните с unit тестов для базовой функциональности",
      "Используйте пирамиду тестирования",
      "Автоматизируйте выполнение тестов",
      "Отслеживайте покрытие кода тестами",
    ],
  },
  {
    topic: "Code Review Process",
    description:
      "Процесс проверки кода для обеспечения качества и передачи знаний в команде",
    detailedDescription:
      "Code Review Process - это систематический процесс проверки кода перед его интеграцией в основную ветку. Включает автоматические проверки, ревью коллег и обсуждение улучшений. Обеспечивает качество кода и способствует обучению команды.",
    workflow: [
      "Create PR - Создание Pull Request. Разработчик создает PR с описанием изменений, ссылками на задачи и скриншотами. Добавляет ревьюеров из команды.",
      "Automated Checks - Автоматические проверки. CI запускает линтеры, форматтеры, тесты. Проверяется стиль кода, покрытие тестами, сборка проекта.",
      "Peer Review - Ревью коллег. Опытные разработчики проверяют логику, архитектуру, читаемость, производительность. Оставляют комментарии и предложения.",
      "Address Feedback - Исправление замечаний. Автор PR вносит изменения согласно комментариям, отвечает на вопросы, объясняет решения.",
      "Approve & Merge - Одобрение и слияние. После approval от нужного количества ревьюеров PR вливается в основную ветку. Код становится частью проекта.",
    ],
    benefits: [
      "Повышение качества кода",
      "Передача знаний в команде",
      "Обнаружение багов",
      "Соблюдение стандартов",
    ],
    hints: [
      "Делайте небольшие PR для лучшего ревью",
      "Настройте автоматические проверки",
      "Будьте конструктивны в замечаниях",
      "Изучайте код других разработчиков",
    ],
  },
];

export const GRAPH_DEFAULT_NODE = {
  id: "1",
  type: "custom" as const,
  data: {
    label: "Выберите тему для отображения графа",
    description:
      "Выберите тему из меню, чтобы увидеть интерактивный граф с описаниями процессов разработки",
  },
  position: { x: 250, y: 100 },
};

export const GRAPH_NODE_TYPES = {
  input: "input",
  default: "default",
  output: "output",
  decision: "decision",
  topicSelector: "topicSelector",
} as const;

export const GRAPH_EDGE_TYPES = {
  custom: "custom",
  default: "default",
  straight: "straight",
  step: "step",
  smoothstep: "smoothstep",
} as const;

export const CONNECTION_TYPES = {
  "Kanban Board": [
    "Переместить",
    "Следующий этап",
    "Завершить",
    "В процессе",
    "Код ревью",
    "Тестирование",
  ],
  "Scrum Board": [
    "Начать спринт",
    "В разработке",
    "Тестирование",
    "Code Review",
    "Следующий спринт",
    "Готово к релизу",
  ],
  "Git Flow": [
    "Создать ветку",
    "Коммит изменений",
    "Push в репозиторий",
    "Создать Pull Request",
    "Code Review",
    "Merge в main",
  ],
  "CI/CD Pipeline": [
    "Код коммит",
    "Автотесты",
    "Сборка",
    "Статический анализ",
    "Deploy в dev",
    "Deploy в staging",
  ],
  "Testing Strategy": [
    "Unit тесты",
    "Integration тесты",
    "E2E тесты",
    "Performance тесты",
    "Security тесты",
    "Code Coverage",
  ],
  "Code Review Process": [
    "Создать PR",
    "Автоматические проверки",
    "Peer Review",
    "Исправить замечания",
    "Approve",
    "Merge",
  ],
  default: [
    "Связать",
    "Подключить",
    "Перейти к",
    "Следующий",
    "Результат",
    "Процесс",
  ],
};
